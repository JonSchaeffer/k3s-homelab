---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app radarr-uhd
  namespace: homelab
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: default
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      radarr-uhd:
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/radarr
              tag: 6.0.2.10271@sha256:12b8348c57c556d837d28bbc73a8837fb7f402a29aba40385a0513dbd068881b
            env:
              RADARR__APP__INSTANCENAME: Radarr-uhd
              RADARR__APP__THEME: dark
              RADARR__AUTH__METHOD: External
              RADARR__AUTH__REQUIRED: DisabledForLocalAddresses
              RADARR__LOG__DBENABLED: "False"
              RADARR__LOG__LEVEL: info
              RADARR__SERVER__PORT: &port 80
              RADARR__UPDATE__BRANCH: develop
              TZ: America/New_York
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 2Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        className: tailscale
        defaultBackend:
          service:
            name: *app
            port:
              number: *port
        tls:
          - hosts:
            - *app
    persistence:
      config:
        existingClaim: radarr-uhd-config
      config-cache:
        existingClaim: radarr-uhd-cache
        globalMounts:
          - path: /config/MediaCover
      media:
        type: nfs
        server: 192.168.0.147
        path: /mnt/md0/media
        globalMounts:
          - path: /media
      downloads:
        type: nfs
        server: 192.168.0.147
        path: /mnt/md0/media/downloads
        globalMounts:
          - path: /downloads
            subPath: usenet
      tmp:
        type: emptyDir
